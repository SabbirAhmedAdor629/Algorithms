// THIS SORTING APPROACH WORKS WELL IF THE ARRAY INDEX IS GIVEN 1 TO N OR 0 TO N
// Time Complexity O(n)
// algo :- In every step, We check if the number is in its correct index, If not then put it in its correct index by swapping

public void cyclicSort(int[] nums){
        int i = 0;
        while (i<nums.length){
            int corr_index = nums[i]-1;
            if (nums[i] != nums[corr_index]){
                swap(nums,i,corr_index);
            }
            else{
                i++;
            }
        }
    }
    
    public void swap(int[] nums,int first,int second){
        int temp = nums[first];
        nums[first] = nums[second];
        nums[second] = temp;
    }
